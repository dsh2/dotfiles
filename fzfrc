export FZF_DEFAULT_OPTS="
		--bind 'ctrl-b:page-up'
		--bind 'ctrl-f:page-down'
		--bind 'ctrl-p:previous-history' 
		--bind 'ctrl-n:next-history'
		--bind 'ctrl-r:execute(ranger {})'
		--bind 'ctrl-v:execute(vim {})'
		--bind 'ctrl-t:execute(tmux set-buffer {})'
		--bind 'ctrl-x:execute(xclip -selection clipboard -in <<< {})'
		--history=${HOME}/.fzf_history
		--no-mouse
		--exact
		--prompt=\"fzf: \"
"

# fbr - git branch browser
fbr() {
  local branches branch
  branches=$(git branch --all | grep -v HEAD) &&
  branch=$(echo "$branches" |
           fzf-tmux -d $(( 2 + $(wc -l <<< "$branches") )) +m) &&
  git checkout $(echo "$branch" | sed "s/.* //" | sed "s#remotes/[^/]*/##")
}

# fshow - git commit browser
fshow() {
  git log --graph --color=always \
      --format="%C(auto)%h%d %s %C(black)%C(bold)%cr" "$@" |
  fzf --ansi --no-sort --reverse --tiebreak=index --bind=ctrl-s:toggle-sort \
      --bind "ctrl-m:execute:
                (grep -o '[a-f0-9]\{7\}' | head -1 |
                xargs -I % sh -c 'git show --color=always % | less -R') << 'FZF-EOF'
                {}
FZF-EOF"
}

# fs - tmux session management
fs() {
  local session
  session=$(tmux list-sessions -F "#{session_name}" | \
    fzf --query="$1" --select-1 --exit-0) &&
  tmux switch-client -t "$session"
}

ftpane() {
  local panes current_window current_pane target target_session target_window target_pane
  panes=$(tmux list-panes -a -F '#S:#I:#P:#{pane_tty}| - #{pane_width}x#{pane_height} - name:#{=15:window_name} cmd:#{=-15:pane_current_command} dir:#{=15:pane_current_path} title:#{pane_title}')
  current_pane=$(tmux display-message -p '#I:#P')
  current_window=$(tmux display-message -p '#I')

  target=$(echo "$panes" | grep -v "$current_pane" | fzf +m --reverse) || return

  target_session=$(echo $target | awk 'BEGIN{FS=":|-"} {print$1}')
  target_window=$(echo $target | awk 'BEGIN{FS=":|-"} {print$2}')
  target_pane=$(echo $target | awk 'BEGIN{FS=":|-"} {print$3}' | cut -c 1)

  tmux switch-client -t $target_session:$target_window.$target_pane
  zle redisplay
}

zle     -N   ftpane
bindkey '\ew' ftpane

# gch - browse chrome history
gch() {
  local title_width sep
  title_width=$(( COLUMNS / 2 ))
  sep='{{::}}'
  cp -f "/home/dsf/.config/google-chrome-history" /tmp/h

  sqlite3 -separator $sep /tmp/h  \
	  "select datetime((last_visit_time/1000000)-11644473600, 'unixepoch', 'localtime'), substr(title, 1, $title_width), url from urls order by last_visit_time desc" |
  awk -F $sep '{printf "%s %-'$title_width's  \x1b[36m%s\n", $1, $2, $3}' |
  fzf --ansi --multi | sed 's#.*\(https*://\)#\1#' | xargs exo-open > /dev/null 2>&1
  zle redisplay

}
zle		-N		gch
bindkey	'\eU'	gch

__fzfz() {
    eval "z -l|cut -f 2" | fzf --tac --tiebreak=index -m --preview="ls --color=always -al {} " | while read item; do
    printf '%q ' "$item"
  done
  echo
}
fzfz-file-widget() {
  LBUFFER="${LBUFFER}$(__fzfz)"
  zle redisplay
}

zle     -N   fzfz-file-widget
bindkey '^G' fzfz-file-widget

if [ -z "$TMUX" ]; then
		bindkey '^[H' run-help
else
		run-help-tmux() {
				COMMANDS=("${=LBUFFER}")
				tmux split -vbp 80 vim -R -c "Man ${COMMANDS[1]}" -c "bdelete 1" -c "setlocal nomodifiable"
				zle redisplay
		}
		zle -N run-help-tmux
		bindkey '^[H' run-help-tmux
fi
# vim: se ft=sh:
