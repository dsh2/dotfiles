UNAME=$(uname)

# Change directory
alias .....='cd ../../../..'
alias ....='cd ../../..'
alias ...='cd ../..'
alias ..='cd ..'
alias cdd=popd
cdp() { 
    CD_PIDS=(${=$(pidof "$*")});
    if [ -n "$CD_PIDS[1]" ]; then
	cd /proc/${CD_PIDS[1]};
	if [ -n "$CD_PIDS[2]" ]; then
	    echo CD_PIDS = $CD_PIDS;
	fi; 
    else
	echo no process matched \"$*\"
    fi;
}
compdef _pids cdp

cd() { 
    if ! builtin cd $* 2> /dev/null; then 
	builtin cd $(dirname "$*"); 
    fi; 
}
cb() { if DIR=$(dirs -lp | uniq | tac | fzf); then echo $DIR; cd $DIR; else; echo Abort.; fi; }

source ~/.dotfiles/z/z.sh

# AOSP
alias aosp='cd "$AOSP_HOME" && source build/envsetup.sh && export OUT_DIR_COMMON_BASE="$AOSP_HOME/out.$MYHOSTNAME"'
alias adbk='adb shell input keyboard text'
alias adl='adb logcat -v threadtime ThermalEngine:S DownloadManagerWrapper:S WifiConfigStore:S wpa_supplicant:S NewsWeather:S WifiStateMachine:S WifiService:S |& lnav -w ~/.logs/adb-logcat/$(date "+%F-%T").log'
alias adll='adb logcat -v threadtime |& lnav -w ~/.logs/adb-logcat/$(date "+%F-%T").log'
alias add='adb devices -l'
alias ads='adb shell '
alias aps='adb shell ps '
ash() {
		[ -z "$ANDROID_SERIAL" ] && ANDROID_SERIAL=$(adb get-serialno 2> /dev/null)
		[ -z "$ANDROID_SERIAL" ] && ( echo No Android device found...; exit 1 )
		type prompt_tag > /dev/null 2>&1 && prompt_tag "[ANDROID_SERIAL=$ANDROID_SERIAL]"
		echo $ANDROID_SERIAL: $@
		adb shell $@
}
alias a_=ash
a_pidof() { echo $(adb shell ps | grep "$@" | cut -c 9-15 ); }
a_pidof1() { echo $(adb shell ps | grep "$@" | cut -c 9-15 | head -1 ); }

# find
if [ "$UNAME" = "Darwin" ]; then
		alias f=gfind
		alias loc=glocate
else
		alias f=find
		loc() { locate "$*" | grep --color "$*"; }
fi
alias fdd='f . -type d'
alias ff='f . -type f'
alias ffn='ff -name'
gffn() { ffn "$1" -exec grep --color=auto -HE "$2" {} \; ; }
alias fgr='f . | grep -i --color=auto '
locl() { loc "$PWD/$*" ; }

# git
alias g=git
alias gap='git add -pv && git commit -v'
alias gc='git commit -v'
alias gcv=gc
alias gca='git commit -va'
alias gcop='git checkout --patch'
alias gdf='git diff'
alias grp='git reset --patch'
alias gst='git status -sb --show-stash'
alias gcr='git clone --recursive --verbose '
alias grv='git remote --verbose'
alias gfa='git fetch --all --tags --progress --verbose'
alias gco='git checkout '
alias gk='gitk --all'
alias gcp='git cherry-pick'
alias gpp='git pull --verbose --recurse-submodules --jobs=4'

# ls
if [ "$UNAME" = "Darwin" ]; then
		LS_CMD=gls
else
		LS_CMD=ls
fi
l() { 
		$LS_CMD \
				--almost-all \
				--author \
				--color=always \
				--file-type \
				--format=long \
				--indicator-style=slash \
				--quoting-style=shell \
				--time-style='+%F %T' \
				"$@";
}
alias lD='l --group-directories-first'
alias lt='l -tr'
alias ltr=lt
alias lsd='l -d'
alias fr='fc -R'
alias lnn=lnav
alias r=ranger
alias zz='echo Sourcing ~/.zshrc; time source ~/.zshrc'
alias msf='./msfconsole --real-readline --quiet -r /home/dsf/.dotfiles/msfc.rc'
alias ms=msf
alias mkd='mkdir -p'
alias mkp=mkd
alias goo=googler
alias wh=whence

# Vim aliases
alias v='vim -X'
vs() { v "$1" && echo -e "\nSourcing \"$1\"..."; time source "$1"; echo -e "\nDone sourcing \"$1\"...";}
alias v.=vs
gv() { gvim "$*"; raiseX; }
alias last='v -S ~/.vim/lastsession'
alias glast='gv -S ~/.vim/lastsession'
alias vl=last
viminfo() { vim -R -c "Info $1 $2" -c "bdelete 1" -c "setlocal nomodifiable" ; }
vimman() { vim -R -c "Man $1 $2" -c "bdelete 1" -c "setlocal nomodifiable" -c "set cursorline" "+/example"; }
compdef _man vimman
run() {
    print Running \"$*\"...
    print Start: $(n)
    $* 
    print err = $?
    print Stop: $(n)
    print -P $LINE_SEPARATOR
}

RUN() {
	[ -z $1 ] && { echo Nothing to run.; return; }
	if [ $1 = "--watch" -o $1 = "-w" ]; then
		WATCH=$2
		shift 2
	else 
		WATCH=$1
	fi
	[ -z $WATCH ] && { echo Nothing to watch.; return; }
	[ -z $1 ] && { echo Nothing to run.; return; }
    run $*
    while true; do 
	if inotifywait -q -e move_self -e modify $WATCH > /dev/null ; then 
	    sleep 0.1; 
	    run $*
	fi;
	sleep 0.1; 
    done
}

# Miscellaneous
alias o=exo-open
alias TCPTRACEOPTS_minimal='export TCPTRACEOPTS="--noshowdupack3 --noshowsacks --noshowrexmit --noshowoutorder"'
alias TCPTRACEOPTS_normal='export TCPTRACEOPTS='
alias Xreseed="dd if=/dev/urandom count=1 2> /dev/null | md5sum | sed -e 's,^\([! ]*\).*$,add :0 . \1,' | tee /dev/stderr | xauth"
alias le=$PAGER
alias m=vimman
alias p='ps -afx | grep -i --color'
pp() { ps Axjww|grep -i "$*"|grep -v grep; }
ppp() { ps Axjwwe|grep -i "$*"|grep -v grep; }
alias pst='pstree -g3'
alias pt='pstree -s'
alias p_s='port search --line'
alias tm=/usr/bin/tmux
alias tma='tmux attach'
alias tmn='tmux new-session -t $(tmux list-sessions -F "#S"|head -1)'
alias vp='vim -c "nmap Q :q!<cr>" -c "setlocal nomodifiable" -'
alias vpcsv='vim -c "let b:csv_headerline = 0" -c "set filetype=csv" -c "%CSVArrangeColumn!" -c "nmap Q :q!<cr>" -c "set nomodifiable" -'
alias rm='trash -v'
alias tag=prompt_tag
#g() { grep --color -Inri -- "$@" *; }
gw() { grep --color -Iwri -- "$@" *; }
alias grep='grep --color'
alias -g gg='|& grep -i --color -- '
alias -g ggs='|& strings | grep -i --color '
alias -g ggv='|& grep -v '
alias pg='ping gdns |& lnav -t'
alias acs='apt-cache search'
alias agi='sudo apt-get install --fix-missing -y '
alias r22='rabin2 -gx'
alias pl='patool list'
alias px='patool extract'
alias pd='patool diff'
alias aa='alias|fzf' # TODO: make this a zle filter
alias q='qiv -uBfta '
alias bw='binwalk -veBAEJ -cf binwalk-log.csv '
alias xc='xclip -selection clipboard -in'
alias xcc='tmux show-buffer | xc'
xp() { echo "$*" | xc ; }
alias M=make
alias ndd=ndk-build
alias Gdb='gdb -q -ex "b main" -ex run --args '
alias G='gdbserver :2000 '
GG() { while true; do G "$*"; echo -n Restarting gdbserver...; sleep 1; echo -n " 3..."; sleep 1; echo -n " 2..."; sleep 1; echo -n " 1..."; sleep 1; echo GO\!; done }
alias cloc='locate .zsh_local_history | xargs grep --color '
alias zloc='fc -p .zsh_local_history'
alias fcp='fc -P'
alias fcP=zloc
alias rmzl='find . -name .zsh_local_history -exec rm {} \;'
alias -g xr='|xxd -r -p'
alias sc=systemctl 
alias dp=dpkg
alias dpl='dpkg -L'
alias dpq=dpkg-query
alias n="date '+%F %T'"
alias nn="date '+%F_%T'"
alias tgi=telegram-cli
alias ncn=nmcli
alias ncc=nmcli
alias ncnn='nmcli dev'
alias ncnc='nmcli con'
alias vv=voltron
alias k=kill
alias pf=pidof
alias fu=fuser
alias cs='killall -STOP chrome; echo -n Chrome sleeping....; cat ; echo CONT; killall -CONT chrome'
alias s=stat
rl() { file "$*" && readlink -f "$*"; }

src_index() {
		find . \
				-name .repo -prune -o \
				-name .git -prune -o \
				-name out -prune -o \
				-name build -prune -o \
				-type f \( \
						-name '*.c' -o \
						-name '*.cc' -o \
						-name '*.cpp' -o \
						-name '*.h' -o \
						-name '*.hpp' \
				\) > cscope.files && command cscope -bi cscope.files;
}

alias s3='/usr/local/bin/sqlite3'
alias file='file -z'
alias d2='dnf-2'
alias sx='screen -X'
alias sxt='sx title'
alias ssv2csv="sed -re 's/([^ \"]*|\"[^\"]*\") /\1,/g; s/\"([^\"]*)\"/\1/g'"
alias -g ss2s="|sed -re 's/[[:space:]]+/ /g'"
alias -g ss2c="|sed -re 's/[[:space:]]+/,/g'"
alias -g ss2t="|sed -re 's/[[:space:]]+/\t/g'"
alias -g ss2tt="|sed -re 's/[[:space:]]{2,}/\t/g'"
alias -g sd2t="|sed -re 's/ - /\t/'"
alias w=wireshark
alias ww='${WIRESHARK:-wireshark} -d tcp.port==1-65535,ssl -o tcp.no_subdissector_on_error:false -o ssl.debug_file:- -o ssl.keylog_file:<(cat **/*.keylogfile(.)) -r *.pcapng > /dev/null 2>&1 &'
alias wws='${WIRESHARK:-wireshark} -d tcp.port==1-65535,ssl -o "tcp.no_subdissector_on_error:false" -o "ssl.debug_file:$(pwd)/ssldebug" -o "ssl.keylog_file:$(readlink -f *.keylogfile)" -r *.pcapng > /dev/null 2>&1 & touch ssldebug; tmux split lnav -t ssldebug'
alias trim="sed -e 's,^[[:blank:]]*\(.*\)[[:blank:]],\1,'"
alias xpidof='xprop  _NET_WM_PID | cut -d= -f2 | trim'
alias xpf=xpidof
alias xps='ps axu gg $(xpidof)'
alias pss='gdb -q -ex "set confirm off" -ex "set height 0" -ex "info shared" -ex "quit" -p '
jobs_wait() { while [ $( jobs | wc -l) -gt $1 ]; do sleep 1; done; }

# Switch profile of running iTerm2 window
it2prof() { echo -e "\033]50;SetProfile=$@\a"; }

if [ $OSTYPE = "cygwin" ]; then
    alias sudo="cygstart --action=runas"
fi

# vim: se ft=sh:
