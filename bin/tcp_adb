# Skip adb version mismatch via adb port forwarding
#
# Example usage:
# adb_host=some_host source tcp_adb

set -x
: ${adb_host:=localhost}
[[ -z $adb_host ]] && { echo "usage: adb_host=some_host source tcp_adb"; return 9; }

: ${sudo:=}

null="/dev/null"
ssh=( ssh -T $adb_host )
$ssh true || { echo "Failed to ssh into $adb_host."; return 9; }

# Determine tcp adb serial
[[ -z $tcp_serial ]] && {
	# Try first USB device
	tcp_serial=$( $ssh adb -d get-serialno 2>$null ) || {
		echo "Set tcp_serial to one of these:"
		$ssh adb devices | sed -nE '2~1s:(\s+).*$:\1:p'
		return
	}
}

# Check if ADB is already running in TCP mode
radb=( $ssh adb -s $tcp_serial )
$radb shell true || { echo "TCP ADB connection failed."; return 9; }
port=$( $radb shell getprop service.adb.tcp.port )
[[ -z $port ]] && {
	port=$(shuf -i 62000-65000 -n 1)
	$radb tcpip $port
}
sa=127.0.0.1:$port

# Establish new forwardings unless port is already in use
# lsof -i :$port >$null || $ssh -L $sa:$sa <<< $sudo ANDROID_SERIAL=$tcp_serial sh <<-EOF
$ssh -L $sa:$sa <<< $sudo ANDROID_SERIAL=$tcp_serial sh <<-EOF
	# adb kill-server
	# test "\$( adb shell id -u )" -eq 0 || adb root
	while ! adb forward --list | grep -q $port; do
		adb forward tcp:$port tcp:$port 2>$null
		sleep 0.2
	done
EOF

echo "Connecting locally..."
adb connect $sa || return 9
export ANDROID_SERIAL=$sa

# ai = Android info
ai() { typeset -p ADB_PRODUCT_MODUL ADB_FINGERPRINT ADB_ID_U ADB_TCP_HOST ADB_TCP_PORT }
aic() { 
	ADB_ID=$( adb shell id )
	ADB_ID_U=$( adb shell id -u )
	ADB_PRODUCT_MODUL=$( adb shell getprop ro.product.model )
	ADB_FINGERPRINT=$( adb shell getprop ro.build.fingerprint )
	ADB_TCP_HOST=$adb_host
	ADB_TCP_PORT=$port
	
	current_tmux_pane=$(tmux list-pane -F '#{pane_id}' -f "#{m:$TTY,#{pane_tty}}" 2>$n)
	[[ -n $current_tmux_pane ]] && tmux select-pane -t $current_tmux_pane -T "ADB: $ADB_PRODUCT_MODUL @ $ADB_TCP_HOST"
	
	pgrep -f "scrcpy.*--tcpip=localhost:$ADB_TCP_PORT" || scrcpy --disable-screensaver --shortcut-mod=rctrl --tcpip=localhost:$ADB_TCP_PORT &
	type adbfs >$n && {
		adbfs_path=~/mnt/ADBFS/${ADB_FINGERPRINT:gs.[:/]._.}
		mkdir -p $adbfs_path
		mountpoint -q $adbfs_path || adbfs $adbfs_path 
		echo ls $adbfs_path
		ls $adbfs_path
	}
}
aic

ai
set +x
