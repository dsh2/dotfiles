#!/bin/sh

FORMAT=$(cat <<EOF
	alternate_on
	alternate_saved_x
	alternate_saved_y
	buffer_name
	buffer_sample
	buffer_size
	client_activity
	client_created
	client_control_mode
	client_discarded
	client_height
	client_key_table
	client_last_session
	client_name
	client_pid
	client_prefix
	client_readonly
	client_session
	client_termname
	client_termtype
	client_tty
	client_utf8
	client_width
	client_written
	command
	command_list_name
	command_list_alias
	command_list_usage
	cursor_flag
	cursor_x
	cursor_y
	history_bytes
	history_limit
	history_size
	hook
	hook_pane
	hook_session
	hook_session_name
	hook_window
	hook_window_name
	host
	host_short
	insert_flag
	keypad_cursor_flag
	keypad_flag
	line
	mouse_any_flag
	mouse_button_flag
	mouse_standard_flag
	mouse_all_flag
	pane_active
	pane_bottom
	pane_current_command
	pane_current_path
	pane_dead
	pane_dead_status
	pane_height
	pane_id
	pane_in_mode
	pane_input_off
	pane_index
	pane_left
	pane_mode
	pane_pid
	pane_right
	pane_search_string
	pane_start_command
	pane_synchronized
	pane_tabs
	pane_title
	pane_top
	pane_tty
	pane_width
	pid
	scroll_region_lower
	scroll_region_upper
	scroll_position
	session_alerts
	session_attached
	session_activity
	session_created
	session_last_attached
	session_group
	session_grouped
	session_height
	session_id
	session_many_attached
	session_name
	session_stack
	session_width
	session_windows
	socket_path
	start_time
	version
	window_activity
	window_activity_flag
	window_active
	window_bell_flag
	window_find_matches
	window_flags
	window_height
	window_id
	window_index
	window_last_flag
	window_layout
	window_linked
	window_name
	window_panes
	window_silence_flag
	window_stack_index
	window_visible_layout
	window_width
	window_zoomed_flag
	wrap_flag
EOF
)

for format in $FORMAT; do 
	# echo $format = $(tmux display-message -pF \#{$format})
	echo $format \\t $(tmux display-message -pF \#{$format})
done
